montageDefine("daa4856","vendor/requirejs/tests/browsertests/scriptload/index.html",{text:'<!DOCTYPE html><html><head>\n    <title>Script Load Test</title>\n    <script src=../common.js></script>\n    <script>\n    //cache bust?\n    var noCache = location.href.indexOf("nocache") != -1;\n\n    log("noCache: " + noCache);\n\n    var readyRegExp = /complete|loaded/;\n  \n    var onTestScriptLoad = function(evt) {\n      var node = evt.target || evt.srcElement;\n      if (evt.type == "load" || readyRegExp.test(node.readyState)) {\n        log(node.getAttribute("data-name") + " loaded");\n  \n        //Clean up script binding.\n        if (node.removeEventListener) {\n          node.removeEventListener("load", onTestScriptLoad, false);\n        } else {\n          //Probably IE.\n          node.detachEvent("onreadystatechange", onTestScriptLoad);\n        }\n      }\n    }\n  \n    var attachScript = function(url, name, useDocWrite){\n      if (noCache) {\n        url += "?stamp=" + (new Date()).getTime();\n      }\n      if (useDocWrite) {\n          //TODO doc.write\n          document.write(\'<script type="text/javascript" charset="utf-8" data-name="\'\n                         + name\n                         + \'" src="\'\n                         + url\n                         + \'" onload="onTestScriptLoad(evt)" onreadytate="onTestScriptLoad(evt)">\\<\\/script>\');\n      } else {\n        var node = document.createElement("script");\n        node.src = url;\n        node.type = "text/javascript";\n        node.charset = "utf-8";\n        node.setAttribute("data-name", name);\n    \n        //Set up load listener.\n        if (node.addEventListener) {\n          node.addEventListener("load", onTestScriptLoad, false);\n        } else {\n          //Probably IE.\n          node.attachEvent("onreadystatechange", onTestScriptLoad);\n        }\n  \n        document.getElementsByTagName("head")[0].appendChild(node);\n      }\n    }\n\n    var urls = [\n        "one.js",\n        "two.js",\n        "three.js",\n        "four.js",\n        "five.js",\n        "six.js",\n        "seven.js",\n        "eight.js",\n        "nine.js"\n    ]\n\n    var loadUrls = function(useDocWrite) {\n        for (var i = 0, url; url = urls[i]; i++) {\n            attachScript(url, url, useDocWrite);\n        }\n    }\n\n    //First test document.write calls\n    //xxx\n    \n    //Do appendChilds\n    loadUrls(false);\n\n    //Try script appends after page load.\n    log("----------------------");\n    setTimeout(loadUrls, 2000);\n    </script>\n</head>\n<body>\n    <h1>Script Load Test</h1>\n\n    <p>This test checks the order in which script onloads are called. Hopefully\n    only one script onload is fired at a time and it matches the just-evaluated\n    script tag. If this does not work, then it means require.js files *must* specify\n    a module name for a module definition call, instead of letting it be derived\n    from the file path.</p>\n    <p>Check the console for output</p>\n\n\n</body></html>'});