montageDefine("9276fa5","vendor/requirejs/docs/dojo.html",{text:'<html><head></head><body><div id=directory class=section>\n<h1>How to use RequireJS with Dojo</h1>\n<ul class="index mono">\n    <li class=hbox>\n        <a href=#1>Get the template</a><span class="spacer boxFlex"></span><span class=sect>ยง 1</span>\n    </li>\n</ul>\n<p>As of Dojo 1.6, Dojo Core and Dijit have preliminary support for loading its modules with a loader like RequireJS that understands the AMD API proposal. Only a few of the Dojox modules have been converted to allow AMD loading.</p>\n\n<p>AMD loading is still considered experimental in Dojo 1.6, and it only works by using a source distribution, not one of the built distributions.</p>\n</div>\n\n<div class=section>\n<h2>\n<a name=1>Get the template</a>\n<span class=sectionMark>ยง 1</span>\n</h2>\n\n<p>Ben Hockey has set up <a href=https://github.com/neonstalwart/dojo-requirejs-template>a nice template project</a> for getting started with Dojo+RequireJS. The directions are fairly straightforward. Some notes:</p>\n<ul>\n    <li>The RequireJS i18n plugin does not support the equivalent of the djConfig.localeList. A future version of the RequireJS i18n plugin should support it.</li>\n    <li>Dojox does not have it\'s own package config set up because not all of its modules have been converted to understand AMD syntax. Ben suggests one of two options if you want to use some modules in dojox (you need to inspect the modules yourself to see if they support AMD loading):\n    <ul>\n        <li>Add a file similar to dijit/lib/main.js which returns the dojox object rather than the dijit object.</li>\n        <li>Instead of using it like a package, just add a [baseUrl]/dojox.js with contents similar to dijit/lib/main.js</li>\n    </ul></li>\n</ul>\n</div>\n</body></html>'});