var Montage=require("montage").Montage,Component3D=require("runtime/component-3d").Component3D,BasicAnimation=require("runtime/animation").BasicAnimation;exports.Material=Component3D.specialize({constructor:{value:function(){this.super(),this.addRangeAtPathChangeListener("filterColor",this,"handleFilterColorChange"),this.addRangeAtPathChangeListener("emission",this,"handleEmissionChange"),this.addOwnPropertyChangeListener("glTFElement",this),this.addOwnPropertyChangeListener("image",this),this.addOwnPropertyChangeListener("opacity",this)}},filterColor:{value:[1,1,1,1]},emission:{value:[0,0,0,0]},_originalOpacity:{value:1,writable:!0},handleGlTFElementChange:{value:function(){this.handleFilterColorChange(),this.handleEmissionChange(),this.handleImageChange(),this._originalOpacity=this._opacity,null==this._opacity?null!=this.glTFElement.parameters.transparency&&(this._originalOpacity=this._opacity=this.glTFElement.parameters.transparency.value):this.handleOpacityChange()}},initialValueForStyleableProperty:{value:function(e){return"opacity"==e?this._originalOpacity:void 0}},handleFilterColorChange:{value:function(){null!=this.glTFElement&&this.glTFElement.parameters.filterColor&&(this.glTFElement.parameters.filterColor.value=this.filterColor,this.scene&&this.scene.dispatchEventNamed("materialUpdate",!0,!1,this))}},handleEmissionChange:{value:function(){null!=this.glTFElement&&this.glTFElement.parameters.emission&&(this.glTFElement.parameters.emission.value=this.emission,this.scene&&this.scene.dispatchEventNamed("materialUpdate",!0,!1,this))}},handleOpacityChange:{value:function(){null!=this.glTFElement&&this.glTFElement.parameters.transparency&&(this.glTFElement.parameters.transparency.value=this._opacity,this.scene&&this.scene.dispatchEventNamed("materialUpdate",!0,!1,this))}},handleImageChange:{value:function(){if(null!=this.glTFElement&&this.glTFElement.parameters.diffuse&&this._image){var e=this.resolvePathIfNeeded(this._image),t=this.parameterForImagePath(e);this.glTFElement.parameters.diffuse=t,this.scene&&this.scene.dispatchEventNamed("textureUpdate",!0,!1,t)}}},parameterForImagePath:{value:function(e){var t={magFilter:WebGLRenderingContext.LINEAR,minFilter:WebGLRenderingContext.LINEAR,type:"sampler",wrapS:WebGLRenderingContext.REPEAT,wrapT:WebGLRenderingContext.REPEAT},n={id:"source-"+e,type:"image",baseId:"source-"+e,description:{path:e}},i={baseId:"texture-"+e,id:"texture-"+e,format:WebGLRenderingContext.RGBA,internalFormat:WebGLRenderingContext.RGBA,sampler:t,source:n,type:"texture",target:WebGLRenderingContext.TEXTURE_2D},r={parameter:"diffuse",value:i};return r}},_image:{value:null,writable:!0},image:{set:function(e){if(e&&0!=e.length){var t=e.toLowerCase();(-1!=t.indexOf(".jpg")||-1!=t.indexOf(".jpeg")||-1!=t.indexOf(".png"))&&this._image!=e&&(this._image=e)}},get:function(){return this._image}},_opacity:{value:null,writable:!0},animationDidStart:{value:function(){}},animationDidStop:{value:function(){}},animationDidUpdate:{value:function(){}},opacity_animationSetter:{set:function(e){this._opacity!=e&&(this._opacity=e,this.handleOpacityChange())}},opacity:{set:function(e){if(this._opacity!=e){if(this.glTFElement){var t=this.scene.glTFElement.animationManager;if(t.removeAnimationWithTargetAndPath(this,"opacity_animationSetter"),this._style&&this._style.transitions){var n=this._style.transitions.opacity;if(null!=n&&n.duration>0){var i=Object.create(BasicAnimation).init();return i.path="opacity_animationSetter",i.target=this,i.delegate=this,i.from=Number(this._opacity),i.to=Number(e),i.duration=1e3*n.duration,t.playAnimation(i),i.animationWasAddedToTarget(),t.evaluateAtTime(Date.now()),void 0}}}this._opacity=e}},get:function(){return this._opacity}},_stylableProperties:{value:["opacity"]},styleableProperties:{get:function(){return this._stylableProperties}}});