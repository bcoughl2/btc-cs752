require("runtime/dependencies/gl-matrix");var Utilities=require("runtime/utilities").Utilities,TransformHelper=require("runtime/transform-helper").TransformHelper;exports.NodeWrapper=Object.create(Object.prototype,{_transformHelper:{value:null,writable:!0},node:{get:function(){return this._transformHelper.node}},init:{value:function(e){return this._transformHelper=Object.create(TransformHelper).init(),this._transformHelper.node=e,this}},viewPointWillChange:{value:function(){}},viewPointDidChange:{value:function(){this._transformHelper.viewPoint=this._scenePassRenderer.viewPoint}},viewPointMatrixDidUpdate:{value:function(){this._transformHelper.transformDidUpdate()}},scenePassRenderer:{get:function(){return this._scenePassRenderer},set:function(e){this._scenePassRenderer!=e&&(this._scenePassRenderer&&this._scenePassRenderer.removeObserver(this),this._scenePassRenderer=e,this._transformHelper.viewMatrix=e._viewPointMatrix,this._scenePassRenderer&&this._scenePassRenderer.addObserver(this))}},worldMatrix:{get:function(){return this.node.worldMatrix}},worldViewMatrix:{get:function(){return this._transformHelper.worldViewMatrix}},viewMatrix:{get:function(){return this._transformHelper.viewMatrix}},worldViewInverseMatrix:{get:function(){return this._transformHelper.worldViewInverseMatrix}},worldViewInverseTransposeMatrix:{get:function(){return this._transformHelper.worldViewInverseTransposeMatrix}}});